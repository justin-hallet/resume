{"version":3,"sources":["Moldflow/projects.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["projects","require","module","exports","console","log","JSON","stringify","moldflow","cyrb53","str","ch","seed","h1","h2","i","length","charCodeAt","Math","imul","App","className","date","text","src","alt","project","atoms","role","team","details","skils","year","toString","name","style","margin","trigger","tagline","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFAAA,IAAIA,EAAW,CACXC,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,KAEZC,EAAOC,QAAQH,G,gzGCjBA,I,2CCkBfI,QAAQC,IAAIC,KAAKC,UAAUC,IAE3B,IAAMC,EAAS,SAASC,GAEtB,IAFsC,IAEtBC,EAFWC,EAAU,uDAAH,EAC9BC,EAAK,WAAaD,EAAME,EAAK,WAAaF,EACrCG,EAAI,EAAOA,EAAIL,EAAIM,OAAQD,IAChCJ,EAAKD,EAAIO,WAAWF,GACpBF,EAAKK,KAAKC,KAAKN,EAAKF,EAAI,YACxBG,EAAKI,KAAKC,KAAKL,EAAKH,EAAI,YAI5B,OAFAE,EAAKK,KAAKC,KAAKN,EAAMA,IAAK,GAAK,YAAcK,KAAKC,KAAKL,EAAMA,IAAK,GAAK,YAEhE,YAAc,SADrBA,EAAKI,KAAKC,KAAKL,EAAMA,IAAK,GAAK,YAAcI,KAAKC,KAAKN,EAAMA,IAAK,GAAK,eACjCA,IAAK,IA+D9BO,MA5Df,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,gDAIF,cAAC,IAAD,UACA,eAAC,IAAD,WACA,cAAC,IAAD,CACIC,KAAK,OACLC,KAAK,uBACLC,IAAI,kFACJC,IAAI,yBAEJ,cAAC,IAAD,CACAH,KAAK,OACLC,KAAK,4BACLC,IAAI,GACJC,IAAI,KAEN,cAAC,IAAD,CACEH,KAAK,OACLC,KAAK,WACLC,IAAI,qDACJC,IAAI,aAGLjB,OAAa,SAACkB,GACb,IAAMC,EAAQ,CACZ,SAAWD,EAAQE,KACnB,cAAgBF,EAAQG,KACxB,YAAcH,EAAQI,QACtB,WAAaJ,EAAQK,OAEvB,OAAO,eAAC,IAAD,CAAWT,KAAMI,EAAQM,KAAKC,WAAYV,KAAMG,EAAQQ,KAAxD,UACG,mBAAGC,MAAO,CAACC,OAAQ,UACnB,eAAC,IAAD,CAAaC,QAASX,EAAQY,QAA9B,UACE,mBAAGH,MAAO,CAACC,OAAQ,UAClBT,EAAMY,KAAI,SAAChB,GACV,OAAO,cAAC,IAAD,CAAUA,KAAMA,GAAWd,EAAOc,YALmBd,EAAOiB,EAAQQ,UAW3F,cAAC,IAAD,CACEZ,KAAK,OACLC,KAAK,WACLC,IAAI,sEACJC,IAAI,sBCvECe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.418585f4.chunk.js","sourcesContent":["var projects = [\n    require(\"./dynamic-series.json\"),\n    require(\"./ideas.json\"),\n    require(\"./part-adviser.json\"),\n    require(\"./pro-plastics-advisor.json\"),\n    require(\"./solidworks-moldflow-express.json\"),\n    require(\"./impa.json\"),\n    require(\"./plasticszone.json\"),\n    require(\"./mold-adviser.json\"),\n    require(\"./shotscope.json\"),\n    require(\"./matrix-altanium.json\"),\n    require(\"./simalink.json\"),\n    require(\"./synergy.json\"),\n    require(\"./communicator.json\"),\n    require(\"./plastics-adviser.json\"),\n    require(\"./network-license-manager.json\"),    \n]\nmodule.exports=projects","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\n\nimport {\n  Timeline,\n  Events,\n  UrlButton,\n  ImageEvent,\n  TextEvent,\n  YouTubeEvent,\n  TextAtom,\n} from '@merc/react-timeline';\n\nimport Collapsible from 'react-collapsible';\n\nimport * as moldflow from './Moldflow/projects';\n\nconsole.log(JSON.stringify(moldflow));\n\nconst cyrb53 = function(str, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n  for (let i = 0, ch; i < str.length; i++) {\n      ch = str.charCodeAt(i);\n      h1 = Math.imul(h1 ^ ch, 2654435761);\n      h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n  h1 = Math.imul(h1 ^ (h1>>>16), 2246822507) ^ Math.imul(h2 ^ (h2>>>13), 3266489909);\n  h2 = Math.imul(h2 ^ (h2>>>16), 2246822507) ^ Math.imul(h1 ^ (h1>>>13), 3266489909);\n  return 4294967296 * (2097151 & h2) + (h1>>>0);\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Justin Hallet\n        </p>\n      </header>\n      <Timeline>\n      <Events>\n      <ImageEvent\n          date=\"1990\"\n          text=\"GEC Marconi Avionics\"\n          src=\"https://cdn.rochesteravionicarchives.co.uk/img/catalog/GEC-Marconi_Avionics.jpg\"\n          alt=\"GEC Marconi Avionics\"\n        />\n          <ImageEvent\n          date=\"1993\"\n          text=\"Special Telephone Systems\"\n          src=\"\"\n          alt=\"\"\n        />\n        <ImageEvent\n          date=\"1995\"\n          text=\"Moldflow\"\n          src=\"https://cdn.worldvectorlogo.com/logos/moldflow.svg\"\n          alt=\"Moldflow\"\n        />\n\n        {moldflow.map((project)=> {\n          const atoms = [\n            \"Role: \" + project.role,\n            \"Team size: \" + project.team,\n            \"Details: \" + project.details,\n            \"Skills: \" + project.skils,\n          ]\n          return <TextEvent date={project.year.toString()} text={project.name} key={cyrb53(project.name)}>\n                    <p style={{margin: '.3em'}}></p>\n                    <Collapsible trigger={project.tagline}>            \n                      <p style={{margin: '.3em'}}></p>                          \n                      {atoms.map((text) => {\n                        return <TextAtom text={text} key={cyrb53(text)}></TextAtom>\n                      })}\n                    </Collapsible>\n                 </TextEvent>  \n        })}\n\n        <ImageEvent\n          date=\"2008\"\n          text=\"Autodesk\"\n          src=\"https://brand.autodesk.com/app/uploads/2021/04/alternate-logo-1.svg\"\n          alt=\"Autodesk\"\n        />\n\n      </Events>\n    </Timeline>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}